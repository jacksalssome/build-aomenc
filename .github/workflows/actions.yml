# This is a basic workflow to help you get started with Actions

name: Build libaom win64x

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
       AOM_LAST_TAG: "v3.0.0-rc1"
       aom_options: " -Thost=x64 -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTS=OFF -DENABLE_TESTDATA=OFF -DENABLE_DOCS=OFF -DENABLE_TOOLS=OFF "
       aom_extra_options: " -DENABLE_NASM=ON "
    # The type of runner that the job will run on
    runs-on: windows-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out libaom repo $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout aom repo
        run: git clone -b master https://aomedia.googlesource.com/aom aom_src

      # Runs a set of commands using the runners shell
      - name: Get libaom version
        run: |
          echo "From last tag version: ${env:AOM_LAST_TAG}"
          git rev-list "${env:AOM_LAST_TAG}.." --count
          $count = (& git rev-list "${env:AOM_LAST_TAG}.." --count).Trim()
          $commit = (& git log -1 --format=format:"%h").Trim()
          $version = "${env:AOM_LAST_TAG}-$count-g$commit"
          echo $version
        working-directory: ./aom_src
        
      - name: Install nasm
        uses: ilammy/setup-nasm@v1

      - name: Prepare Build with cmake
        run: |
          mkdir cmake_build
          cd cmake_build
          cmake --version
          cmake ..\aom_src %aom_options% %aom_extra_options% -A x64

#Build aom with Visual Studio 2019
      - name: Prepare Build with cmake
        run: |
          msbuild .\cmake_build\AOM.sln /m /verbosity:minimal
# Push files to artifacts
#build:
#  project: C:\projects\build-aom\cmake_build\AOM.sln
#  verbosity: minimal
#  parallel: true

# Push files to artifacts
#after_build:
#- appveyor AddMessage "Finish build" -Category Information
#- cd %APPVEYOR_BUILD_FOLDER%\cmake_build\Release\
#- appveyor PushArtifact aomenc.exe
#- appveyor PushArtifact aomdec.exe
#- appveyor AddMessage "Finish upload" -Category Information






